---
- name: Download harbor installer
  get_url:
    url: https://github.com/goharbor/harbor/releases/download/v{{ harbor_version }}/harbor-online-installer-v{{ harbor_version }}.tgz
    dest: '{{ mdxuser_home }}'

- name: Uncompress harbor installler
  unarchive:
    src: /home/mdxuser/harbor-online-installer-v{{ harbor_version }}.tgz
    dest: '{{ mdxuser_home }}'
    remote_src: yes

- name: Create a certificate directory
  file: 
    path: '{{ harbor_cert_dir }}'
    state: directory

- name: generate a CA private key
  command:
    cmd: openssl genrsa -out ca.key 4096
    chdir: '{{ harbor_cert_dir }}'

- name: generate a CA certificate
  command: 
    cmd: >
      openssl req -x509 -new -nodes 
        -sha512 -days 3650 
        -subj '{{ ca_subject }}'
        -key ca.key -out ca.crt
    chdir: '{{ harbor_cert_dir }}'

- name: generate a server sertificate
  command:
    cmd: openssl genrsa -out {{ registry_server }}.key 4096
    chdir: '{{ harbor_cert_dir }}'

- name: generate a CSR
  command:
    cmd: >
      openssl req -sha512 -new 
        -subj '{{ server_subject }}'
        -key {{ registry_server }}.key -out {{ registry_server }}.csr
    chdir: '{{ harbor_cert_dir }}'

- name: generate an x509v3 extension file
  template:
    src: templates/v3.ext.j2
    dest: '{{ harbor_cert_dir }}/v3.ext'

- name: Replace the x509 certificate
  command:
    cmd: >
      openssl x509 -req -sha512 -days 3650 
        -extfile v3.ext 
        -CA ca.crt -CAkey ca.key -CAcreateserial 
        -in {{ registry_server }}.csr 
        -out {{ registry_server }}.crt
    chdir: '{{ harbor_cert_dir }}'

- name: Convert the certificate to PEM file
  command:
    cmd: >
      openssl x509 -inform PEM 
        -in {{ registry_server }}.crt 
        -out {{ registry_server }}.cert
    chdir: '{{ harbor_cert_dir }}'

- name: Fetch the PEM file
  fetch:
    src: '{{ harbor_cert_dir }}/{{ registry_server }}.crt'
    dest: '{{ mdxuser_home }}/{{ registry_server }}.crt'
    flat: yes

- name: Fetch the CA certificate file
  fetch:
    src: '{{ harbor_cert_dir }}/ca.crt'
    dest: '{{ mdxuser_home }}/ca.crt'
    flat: yes

- name: Copy harbor config file
  copy:
    src: '{{ harbor_dir }}/harbor.yml.tmpl'
    dest: '{{ harbor_dir }}/harbor.yml'
    remote_src: yes

- name: Replace harbor config file
  replace:
    path: '{{ harbor_dir }}/harbor.yml'
    regexp: 'hostname: reg.mydomain.com'
    replace: 'hostname: {{ registry_server }}'

- name: Replace harbor config file (2)
  replace:
    path: '{{ harbor_dir }}/harbor.yml'
    regexp: 'certificate: /your/certificate/path'
    replace: 'certificate: {{ harbor_cert_dir }}/{{ registry_server }}.cert'

- name: Replace harbor config file (3)
  replace:
    path: '{{ harbor_dir }}/harbor.yml'
    regexp: 'private_key: /your/private/key/path'
    replace: 'private_key: {{ harbor_cert_dir }}/{{ registry_server }}.key'


- name: Replace db password
  replace:
    path: '{{ harbor_dir }}/harbor.yml'
    regexp: 'harbor_admin_password: Harbor12345'
    replace: 'harbor_admin_password: {{ harbor_admin_password }}'
    # replace: "harbor_admin_password: {{ lookup('password', '/dev/null chars=ascii_uppercase,ascii_lowercase,digits length=20') }}"


- name: Replace db password
  replace:
    path: '{{ harbor_dir }}/harbor.yml'
    regexp: 'password: root123'
    replace: 'password: {{ harbor_db_password }}'
    # replace: "password: {{ lookup('password', '/dev/null chars=ascii_uppercase,ascii_lowercase,digits length=20') }}"

- name: Replace data volume
  replace:
    path: '{{ harbor_dir }}/harbor.yml'
    regexp: 'data_volume: /data'
    replace: 'data_volume: {{ harbor_data_dir }}'

- name: Install docker
  apt:
    name: docker.io
  become: yes

- name: Install docker compose
  apt:
    name: docker-compose
  become: yes

- name: Start docker
  systemd:
    name: docker
    state: started
    enabled: yes
  become: yes

- name: Prepare harbor
  command:
    cmd: ./prepare
    chdir: '{{ harbor_dir }}'
  become: yes

- name: Install harbor
  command:
    cmd: ./install.sh
    chdir: '{{ harbor_dir }}'
  become: yes

